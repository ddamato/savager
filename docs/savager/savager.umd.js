!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).Savager={})}(this,(function(e){"use strict";const t=function(e){const t=document.getElementById(e);let s=document.getElementById("savager-mastersheet");s||(s=document.createElementNS("http://www.w3.org/2000/svg","svg"),s.id="savager-mastersheet",s.style.display="none",document.body.appendChild(s)),Array.prototype.slice.call(t.querySelectorAll("symbol")).forEach(e=>s.appendChild(e)),t.remove()}.toString(),s="window.svgInjectionManager && window.svgInjectionManager.replace(this)";class n{constructor(e,t){this._symbols={},this._options=Object.assign({},t),this.storeSymbols(e)}prepareAssets(e,n){const{externalUrl:o,consolidate:i,inject:a,classNames:c,toElement:l}=n||this._options,d=c?`class="${[].concat(c).filter(Boolean).join(" ")}"`:"";let p=e=>e;l&&(p="function"==typeof l?l:r);const u=[].concat(e).reduce((function(e,t){const n={href:"#"+t};let r="internal";o&&(n.href=`${"string"==typeof o?o:""}${t}.svg`+n.href,r="external");let i="";a&&(i="<style>@keyframes nodeInserted { to { opacity: 1; } }</style>",n.style="animation: nodeInserted .1ms",n.onanimationstart=s,n.onerror=s);const c=`<svg ${[d,r].filter(Boolean).join(" ")}>${i}<use ${Object.entries(n).map(([e,t])=>`${e}="${t}"`).join(" ")}/></svg>`;return Object.assign(e,{[t]:c})}),{}),m=this._symbols;let f=Object.keys(u).reduce((function(e,t){return m&&m[t]?e+m[t].replace(/<\/?svg ?[^>]*>/gim,""):e}),"");const g=Object.entries(u).reduce((e,[t,s])=>Object.assign(e,{[t]:p(s)}),{});if(f&&!o){const{sheet:e}=function(e,s){const n="savager-"+Math.random().toString(36).substr(2,9),r=`(${t})('${n}')`,o=`<script type="text/javascript">${r}<\/script>`,i=`<svg id="${n}" xmlns="http://www.w3.org/2000/svg" style="display:none;" consolidate="false">${e}${o}</svg>`;return{sheet:!1===s?i.replace(o,""):i.replace('consolidate="false"',""),script:r}}(f,i);return{assets:g,sheet:p(e)}}return{assets:g}}storeSymbols(e){return this._symbols=Object.assign({},this._symbols,e),this}}function r(e){if("undefined"!=typeof document&&document.createElement){const t=document.createElement("template");return t.innerHTML=e,t.content}return e}function o(e,t){let s='xmlns="http://www.w3.org/2000/svg"';const n=e.replace(/(xmlns=.[^"']+)./gim,e=>(s=e,"")).replace(/(<\/?)svg/gim,"$1symbol").replace(/<symbol/,`<symbol id="${t}"`);return`<svg ${s}>${n}</svg>`.replace(/\r?\n|\r|/g,"").replace(/ {2,}/g," ")}const i=n;e.Savager=i,e.createSymbols=async function e(t){if(!t)return{};if("string"==typeof t){if("undefined"!=typeof window||!require)throw new Error("Can only create symbols using path within node environment.");const s=require("path"),n=require("fs");try{const r=await n.promises.readdir(t),o=await Promise.all(r.map(async e=>({[s.parse(e).name]:(await n.promises.readFile(s.resolve(t,e))).toString()})));return e(o.reduce((e,t)=>Object.assign(e,t),{}))}catch(e){throw new Error(e)}}return"object"==typeof t?Object.entries(t).reduce((e,[t,s])=>Object.assign(e,{[t]:o(s,t)}),{}):void 0},e.default=n,Object.defineProperty(e,"__esModule",{value:!0})}));
