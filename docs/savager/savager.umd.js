!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).Savager={})}(this,(function(e){"use strict";const t="window.svgInjectionManager && window.svgInjectionManager.replace(this)";class n{constructor(e,t){this._symbols={},this._options=Object.assign({},t),this.storeSymbols(e)}prepareAssets(e,n){const{externalUrl:o,inject:i,classNames:c,toElement:a}=n||this._options,l={xmlns:"http://www.w3.org/2000/svg"};c&&(l.class=[].concat(c).filter(Boolean).join(" "));let u=e=>e;a&&(u="function"==typeof a?a:r);const f=[].concat(e).reduce((function(e,n){const r=Object.assign({exposure:"internal"},l),c={href:"#"+n};o&&(r.exposure="external",c.href=`${"string"==typeof o?o:""}${n}.svg`+c.href);let a="";i&&(a="<style>@keyframes nodeInserted { to { opacity: 1; } }</style>",c.style="animation: nodeInserted .1ms",c.onanimationstart=t,c.onerror=t);const u=`<svg ${s(r)}>${a}<use ${s(c)}/></svg>`;return Object.assign(e,{[n]:u})}),{}),m=this._symbols;let g=Object.keys(f).reduce((function(e,t){return m&&m[t]?e+m[t].replace(/<\/?svg ?[^>]*>/gim,""):e}),"");const p=Object.entries(f).reduce((e,[t,n])=>Object.assign(e,{[t]:u(n)}),{});if(g&&!o){const{sheet:e}=function(e){const t="savager-"+Math.random().toString(36).substr(2,9);return{sheet:`<svg id="${t}" xmlns="http://www.w3.org/2000/svg" style="display:none;">${e}</svg>`}}(g);return{assets:p,sheet:u(e)}}return{assets:p}}storeSymbols(e){return this._symbols=Object.assign({},this._symbols,e),this}}function s(e){return Object.entries(e).map(([e,t])=>`${e}="${t}"`).join(" ")}function r(e){if("undefined"!=typeof document&&document.createElement){const t=document.createElement("template");return t.innerHTML=e,t.content}return e}function o(e,t){let n='xmlns="http://www.w3.org/2000/svg"';const s=e.replace(/(xmlns=.[^"']+)./gim,e=>(n=e,"")).replace(/(<\/?)svg/gim,"$1symbol").replace(/<symbol/,`<symbol id="${t}"`);return`<svg ${n}>${s}</svg>`.replace(/\r?\n|\r|/g,"").replace(/ {2,}/g," ")}const i=n;e.Savager=i,e.createSymbols=async function e(t){if(!t)return{};if("string"==typeof t){if("undefined"!=typeof window||!require)throw new Error("Can only create symbols using path within node environment.");const n=require("path"),s=require("fs");try{const r=await s.promises.readdir(t),o=await Promise.all(r.map(async e=>({[n.parse(e).name]:(await s.promises.readFile(n.resolve(t,e))).toString()})));return e(o.reduce((e,t)=>Object.assign(e,t),{}))}catch(e){throw new Error(e)}}return"object"==typeof t?Object.entries(t).reduce((e,[t,n])=>Object.assign(e,{[t]:o(n,t)}),{}):void 0},e.default=n,Object.defineProperty(e,"__esModule",{value:!0})}));
